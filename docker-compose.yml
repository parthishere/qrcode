version: "3.9"

services:

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"


  redis:
    image: redis:alpine
    restart: always
    expose:
      - '6379'
    ports:
      - '6379:6379'

  web: &web
    build:
      context: .
      dockerfile: dockerfile
    # command: daphne login_with_face.asgi:application -b 0.0.0.0 -p 8000
    command: bash -c 'python manage.py collectstatic --no-input && python manage.py makemigrations && python manage.py migrate && python3 manage.py initadmin && python manage.py runserver 0.0.0.0:8000'
    environment:
      - DEBUG=0   
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres   
    env_file: .env
    volumes:
      - static_media:/django/staticfiles
      - .:/django
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis   
      - websocket
      - celeryworker     


  celeryworker:
    <<: *web
    image: celeryworker
    env_file: .env
    depends_on:
      - redis
      - db
    ports: []
    command: celery -A qrwebsite worker --loglevel=info -P eventlet -E
  

  websocket:
    build: .
    command: python3 websockets.py
    volumes:
      - .:/django
    ports:
      - "8888:8888"
    depends_on:
      - db



volumes:
  postgres_data:
  redis_volume:
  static_media:



